services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: checkafe-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminPassword123
      - MONGO_INITDB_DATABASE=checkafe
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - checkafe-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ismaster')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Backend API
  backend:
    build:
      context: ./be
      dockerfile: Dockerfile
    container_name: checkafe-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_URL=mongodb://admin:adminPassword123@mongodb:27017/checkafe?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - ACCESS_TOKEN_SECRET_SIGNATURE=${ACCESS_TOKEN_SECRET_SIGNATURE}
      - REFRESH_TOKEN_SECRET_SIGNATURE=${REFRESH_TOKEN_SECRET_SIGNATURE}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - PAYOS_CLIENT_ID=${PAYOS_CLIENT_ID}
      - PAYOS_API_KEY=${PAYOS_API_KEY}
      - PAYOS_CHECKSUM_KEY=${PAYOS_CHECKSUM_KEY}
      # Socket.IO Configuration
      - CLIENT_URL=https://api.checkafe.online,https://checkafe-admin.onrender.com,http://localhost:5173,http://localhost:3002
      - SOCKET_CORS_ORIGINS=https://api.checkafe.online,https://checkafe-admin.onrender.com,http://localhost:5173,http://localhost:3002
    expose:
      - "3000"
    volumes:
      - ./be/uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - checkafe-network


  # Admin Dashboard
  admin:
    build:
      context: ./checkafe-admin
      dockerfile: Dockerfile
      args:
        # Build-time variables - This is the URL the BROWSER will use to call the API
        - NEXT_PUBLIC_API_URL=https://api.checkafe.online/api/
        - API_URL=http://backend:3000/api/
        - NODE_ENV=production
        - PORT=3002
    container_name: checkafe-admin
    restart: unless-stopped
    environment:
      # Runtime variables - This is also for the browser
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.checkafe.online/api/
      - PORT=3002
    expose:
      - "3002"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - checkafe-network

  # Landing Page
  landing:
    build:
      context: ./landing-page
      dockerfile: Dockerfile
    container_name: checkafe-landing
    restart: unless-stopped
    expose:
      - "80"
    networks:
      - checkafe-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: checkafe-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - admin
      - landing
    networks:
      - checkafe-network
  # Cloudflare Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: checkafe-tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - nginx
    networks:
      - checkafe-network

networks:
  checkafe-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local