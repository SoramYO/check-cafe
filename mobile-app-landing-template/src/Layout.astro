---
import "swiper/css";
import "@styles/styles.scss";
import type { TemplateConfig } from "utils/configType";
import ThemeToggle from "./components/ThemeToggle.astro";

const { backgroundGrid, seo, logo, theme, forceTheme, showThemeSwitch } =
  Astro.props as TemplateConfig;
---

<!doctype html>
<html lang="en" data-theme={theme}>
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{seo.title}</title>
    <meta name="title" content={seo.title} />
    <meta name="description" content={seo.description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={seo.title} />
    <meta property="og:description" content={seo.description} />
    <meta property="og:image" content={new URL(logo, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={seo.title} />
    <meta property="twitter:description" content={seo.description} />
    <meta property="twitter:image" content={new URL(logo, Astro.url)} />

    <script is:inline define:vars={{ forceTheme, theme }}>
      // Function to get user's preferred color scheme
      function getPreferredColorScheme() {
        if (!window.matchMedia) return theme;
        return window.matchMedia("(prefers-color-scheme: dark)").matches ? "coffee-dark" : "coffee";
      }

      // Function to set theme
      function setTheme(newTheme) {
        document.documentElement.setAttribute("data-theme", newTheme);
        localStorage.setItem("theme", newTheme);
      }

      // Initialize theme
      const savedTheme = localStorage.getItem("theme");
      if (forceTheme) {
        setTheme(theme);
      } else if (savedTheme) {
        setTheme(savedTheme);
      } else {
        setTheme(getPreferredColorScheme());
      }

      // Watch for system theme changes
      window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
        if (!forceTheme && !localStorage.getItem("theme")) {
          setTheme(e.matches ? "coffee-dark" : "coffee");
        }
      });
    </script>
  </head>
  <body class="relative">
    {backgroundGrid && <div class="backgroundGrid" />}
    <slot />
    <ThemeToggle show={showThemeSwitch} />
  </body>
</html>
